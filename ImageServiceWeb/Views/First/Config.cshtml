@model ImageServiceWeb.Models.ConfigModel
@{
    ViewBag.Title = "Config";
}
<head>
    <style>
        h1 {
            color: mediumpurple;
            font-weight: bold;
        }
    </style>
</head>

<h1>Config</h1>
<br />
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div>
        <p>
            @Html.LabelFor(m => m.OutPutDir, new { @class = "col-md-2 control-label" })
            @Html.DisplayFor(m => m.OutPutDir, new { @class = "col-md-2 control-label" })
        </p>
        <br />
        <p>

            @Html.LabelFor(m => m.SourceName, new { @class = "col-md-2 control-label" })
            @Html.DisplayFor(m => m.SourceName, new { @class = "col-md-2 control-label" })
        </p>
        <br />
        <p>
            @Html.LabelFor(m => m.LogName, new { @class = "col-md-2 control-label" })
            @Html.DisplayFor(m => m.LogName, new { @class = "col-md-2 control-label" })
        </p>
        <br />
        <p>
            @Html.LabelFor(m => m.ThumbnailSize, new { @class = "col-md-2 control-label" })
            @Html.DisplayFor(m => m.ThumbnailSize, new { @class = "col-md-2 control-label" })
        </p>
        <br />
        <label>The Handlers:</label>
        <ul class="nav nav-pills nav-stacked">
            @if (Model.HandlersArr != null)
            {
                foreach (var item in Model.HandlersArr)
                {
                    <li>
                        <a href="#">
                            @Html.DisplayFor(modelItem => item)
                        </a>
                    </li>

                }
            }
        </ul>

    </div>

}


<script>
    $("li").click(function () {
        var itemText = $(this).text();
        //delete from the item unnecessary sapces and break line
        var path = itemText.replace(/\s\s+/g, '');
        localStorage.setItem('objectToPass', path);
        window.location.href = "RemoveHandler";

    });

    function remove(x) {
        $(x).hide;
    }
</script>